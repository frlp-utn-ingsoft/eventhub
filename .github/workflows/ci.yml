name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build Django Project
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13.3'  
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Validate Django setup
      run: python manage.py check
      
  unit_and_integration_tests:
    name: Run Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v4
      
    - uses: actions/setup-python@v4
      with:
        python-version: '3.13.3'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Generate temporary SECRET_KEY
      run: echo "SECRET_KEY=$(python -c 'import secrets; print(secrets.token_urlsafe(50))')" >> $GITHUB_ENV
        
    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      run: |
        python manage.py test --noinput
        coverage run --source='.' manage.py test
        coverage report --fail-under=80
        
  e2e_tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: unit_and_integration_tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v4
      with:
        python-version: '3.13.3'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Install Playwright
      run: |
        pip install playwright
        playwright install chromium
        
    - name: Generate temporary SECRET_KEY
      run: echo "SECRET_KEY=$(python -c 'import secrets; print(secrets.token_urlsafe(50))')" >> $GITHUB_ENV
        
    - name: Setup Django server
      run: |
        python manage.py migrate
        python manage.py runserver &
        sleep 5
        
    - name: Run E2E tests
      env:
        BASE_URL: "http://localhost:8000"
        TEST_USER: "testuser"
        TEST_PASSWORD: "testpassword"
      run: |
        python manage.py shell -c "from django.contrib.auth.models import User; User.objects.create_user('$TEST_USER', '', '$TEST_PASSWORD') if not User.objects.filter(username='$TEST_USER').exists() else None"
        playwright test tests/e2e/